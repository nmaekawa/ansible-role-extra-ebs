---
#
# assumes ec2 instance has a `ebs_device` volume already attached.
# it will blindly format and mount the device!
# *** data on the volume will be _erased_ ***
#

  - name: define the device name
    set_fact: device_name={{ ebs_device | basename }}

  - name: query system for device name and mountpoint
    shell: >
      /bin/lsblk -o NAME,MOUNTPOINT -J | jq '.blockdevices[] | select(.name == "{{ device_name }}")'
    register: dev_result
    ignore_errors: True

  - debug:
      var: dev_result

  - fail:
      msg: "specified device ({{ ebs_device }}) does not exist in target node"
    when: dev_result.stdout == ''

  - name: get mountpoint, if device is mounted
    shell: >
       /bin/lsblk -o NAME,MOUNTPOINT -J | jq '.blockdevices[] | select(.name == "{{ device_name }}").mountpoint'
    register: dev_mountpoint
    when: "dev_result.stdout != ''"

  - debug:
      var: dev_mountpoint.stdout

  - debug:
      msg: "device already mounted in intended mountpoint {{ dev_mountpoint.stdout }}"
    when: dev_mountpoint.stdout is defined and dev_mountpoint.stdout == ebs_mountpoint and dev_mountpoint.stdout != "null" and dev_montpoint.stdout != ""

  - fail:
      msg: "device already mounted in different mountpoint ({{ dev_mountpoint }})"
    when: dev_mountpoint.stdout is defined and dev_mountpoint.stdout == ebs_mountpoint and dev_mountpoint.stdout != "null" and dev_montpoint.stdout != ""


  # only proceed to make filesys if device exists and not mounted
  # THIS WONT WORK IN M5
  - name: make filesystem out of ebs
    filesystem:
        fstype: ext4
        dev: "{{ ebs_device }}"
    when: dev_mountpoint.stdout is not defined or dev_mountpoint.stdout == "null" or dev_mountpoint.stdout == ""

  - name: mount ebs
    mount:
        path: "{{ ebs_mountpoint }}"
        src: "{{ ebs_device }}"
        fstype: ext4
        state: mounted
    when: dev_mountpoint.stdout is not defined or dev_mountpoint.stdout == "null" or dev_mountpoint.stdout == ""


